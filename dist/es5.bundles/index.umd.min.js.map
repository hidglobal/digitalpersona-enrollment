{"version":3,"file":"index.umd.min.js","sources":["../es5/enrollmentContext.js","../../node_modules/tslib/tslib.es6.js","../es5/tokens/otp/actions.js","../es5/private/enroller.js","../es5/tokens/cards/enroll.js","../es5/tokens/face/enroll.js","../es5/tokens/fingerprints/enroll.js","../es5/tokens/password/actions.js","../es5/tokens/otp/enroll.js","../es5/tokens/password/enroll.js","../es5/tokens/pin/enroll.js","../es5/tokens/questions/enroll.js","../es5/tokens/u2f/enroll.js"],"sourcesContent":["import { User } from '@digitalpersona/core';\r\n/**\r\n * Enrollment context.\r\n * @remarks\r\n * Pass the context object into token enrollment APIs. The single context may be shared.\r\n */\r\nvar EnrollmentContext = /** @class */ (function () {\r\n    function EnrollmentContext(\r\n    /** DigitalPersona Enrollment web service client */\r\n    enrollService, \r\n    /** A JSON Web Token or a username of a user whose credentials are to be enrolled.\r\n     * @remarks\r\n     * Only DigitalPersona users (formerly \"Altus User\") can be enrolled without authentication,\r\n     * i.e. using only a user name. Other users must be authenticated, i.e. have a JSON Web Token.\r\n     */\r\n    user, \r\n    /** An optional JSON Web Token of a security officer performing an attended enrollment.\r\n     * If not provided, the API should try to use a user's own token instead for a self-enrollment.\r\n     * In this case the user must be allowed to do self-enrollment.\r\n     */\r\n    securityOfficer) {\r\n        this.enrollService = enrollService;\r\n        this.user = user;\r\n        this.securityOfficer = securityOfficer;\r\n        if (!this.enrollService)\r\n            throw new Error(\"enrollService\");\r\n        if (!this.user)\r\n            throw new Error(\"user\");\r\n        if (!this.securityOfficer && !(this.user instanceof User))\r\n            this.securityOfficer = this.user;\r\n    }\r\n    /**\r\n     * Check is the user has an authentication token, or just a user name.\r\n     * @returns `true` if user identity represented by an authenticatication token, `false` otherwise.\r\n     */\r\n    EnrollmentContext.prototype.isAuthenticated = function () {\r\n        return !(this.user instanceof User);\r\n    };\r\n    /**\r\n     * Returns user identity in a form of authentication token.\r\n     * @remarks\r\n     * The user must be authenticated.\r\n     */\r\n    EnrollmentContext.prototype.getJWT = function () {\r\n        return (this.user instanceof User) ? \"\" : this.user;\r\n    };\r\n    /**\r\n     * Returns user identity in a form of a username.\r\n     * @remarks\r\n     * The user may be authenticated or not. If authenticated, the username will be produced from\r\n     * the authentication token claims.\r\n     */\r\n    EnrollmentContext.prototype.getUser = function () {\r\n        return (this.user instanceof User) ? this.user : User.fromJWT(this.user);\r\n    };\r\n    return EnrollmentContext;\r\n}());\r\nexport { EnrollmentContext };\r\n//# sourceMappingURL=enrollmentContext.js.map","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/** @internal */\r\nexport var CustomAction;\r\n(function (CustomAction) {\r\n    CustomAction[CustomAction[\"SendEmailVerificationRequest\"] = 16] = \"SendEmailVerificationRequest\";\r\n    CustomAction[CustomAction[\"SendSMSRequest\"] = 513] = \"SendSMSRequest\";\r\n    CustomAction[CustomAction[\"SendEmailRequest\"] = 514] = \"SendEmailRequest\";\r\n    CustomAction[CustomAction[\"UnlockActiveIdHardwareToken\"] = 515] = \"UnlockActiveIdHardwareToken\";\r\n})(CustomAction || (CustomAction = {}));\r\n//# sourceMappingURL=actions.js.map","import { User, Ticket } from '@digitalpersona/core';\r\n/** @internal */\r\nvar Enroller = /** @class */ (function () {\r\n    function Enroller(context) {\r\n        this.context = context;\r\n        if (!this.context)\r\n            throw new Error(\"context\");\r\n    }\r\n    Enroller.prototype._canEnroll = function (credId) {\r\n        return this.context.enrollService.IsEnrollmentAllowed(new Ticket(this.context.securityOfficer || \"\"), this.context.getUser(), credId);\r\n    };\r\n    Enroller.prototype._enroll = function (credential) {\r\n        if (this.context.user instanceof User) {\r\n            return this.context.enrollService.EnrollAltusUserCredentials(new Ticket(this.context.securityOfficer || \"\"), this.context.user, credential);\r\n        }\r\n        else {\r\n            return this.context.enrollService.EnrollUserCredentials(new Ticket(this.context.securityOfficer || \"\"), new Ticket(this.context.user), credential);\r\n        }\r\n    };\r\n    Enroller.prototype._unenroll = function (credential) {\r\n        if (this.context.user instanceof User) {\r\n            return this.context.enrollService.DeleteAltusUserCredentials(new Ticket(this.context.securityOfficer || \"\"), this.context.user, credential);\r\n        }\r\n        else {\r\n            return this.context.enrollService.DeleteUserCredentials(new Ticket(this.context.securityOfficer || \"\"), new Ticket(this.context.user), credential);\r\n        }\r\n    };\r\n    return Enroller;\r\n}());\r\nexport { Enroller };\r\n//# sourceMappingURL=enroller.js.map","import { __extends } from \"tslib\";\r\nimport { Credential, Utf8 } from '@digitalpersona/core';\r\nimport { Enroller } from '../../private';\r\n/**\r\n * Smartcard enrollment API.\r\n */\r\nvar SmartCardEnroll = /** @class */ (function (_super) {\r\n    __extends(SmartCardEnroll, _super);\r\n    /** Constructs a new smartcard enrollment API object.\r\n     * @param context - an {@link EnrollmentContext|enrollment context}.\r\n     */\r\n    function SmartCardEnroll(context) {\r\n        return _super.call(this, context) || this;\r\n    }\r\n    /** Reads a list of enrolled cards.\r\n     * @returns a promise to return a list of user's enrolled cards.\r\n     */\r\n    SmartCardEnroll.prototype.getEnrolledCards = function () {\r\n        return this.context.enrollService\r\n            .GetEnrollmentData(this.context.getUser(), Credential.SmartCard)\r\n            .then(function (data) {\r\n            return JSON.parse(Utf8.fromBase64Url(data));\r\n        });\r\n    };\r\n    /** Reads a card enrollment availability.\r\n     * @returns a fulfilled promise when a card can be enrolled, a rejected promise otherwise.\r\n     */\r\n    SmartCardEnroll.prototype.canEnroll = function () {\r\n        return _super.prototype._canEnroll.call(this, Credential.SmartCard);\r\n    };\r\n    /** Enrolls a card.\r\n     * @param cardData - a card enrollment data obtained using {@link CardsReader.getCardEnrollData}.\r\n     * @returns a promise to perform the enrollment or reject in case of an error.\r\n     */\r\n    SmartCardEnroll.prototype.enroll = function (cardData) {\r\n        return _super.prototype._enroll.call(this, new Credential(Credential.SmartCard, cardData));\r\n    };\r\n    /**\r\n     * Deletes a specific smart card enrollment defined by its pubilc key hash.\r\n     * @param keyHash - a key hash of the card. If not provided, all smartcard enrollments will be deleted.\r\n     * @returns a promise to delete the enrollment or reject in case of an error.\r\n     */\r\n    SmartCardEnroll.prototype.unenroll = function (keyHash) {\r\n        return _super.prototype._unenroll.call(this, new Credential(Credential.SmartCard, keyHash));\r\n    };\r\n    return SmartCardEnroll;\r\n}(Enroller));\r\nexport { SmartCardEnroll };\r\n/**\r\n * Contactless card enrollment API.\r\n */\r\nvar ContactlessCardEnroll = /** @class */ (function (_super) {\r\n    __extends(ContactlessCardEnroll, _super);\r\n    /** Constructs a new contactless card enrollment API object.\r\n     * @param context - an {@link EnrollmentContext|enrollment context}.\r\n     */\r\n    function ContactlessCardEnroll(context) {\r\n        return _super.call(this, context) || this;\r\n    }\r\n    /** Reads a card enrollment availability.\r\n     * @returns a fulfilled promise when a card can be enrolled, a rejected promise otherwise.\r\n     */\r\n    ContactlessCardEnroll.prototype.canEnroll = function () {\r\n        return _super.prototype._canEnroll.call(this, Credential.ContactlessCard);\r\n    };\r\n    /** Enrolls a card.\r\n     * @param cardData - a card enrollment data obtained using {@link CardsReader.getCardEnrollData}.\r\n     * @returns a promise to perform the enrollment or reject in case of an error.\r\n     */\r\n    ContactlessCardEnroll.prototype.enroll = function (cardData) {\r\n        return _super.prototype._enroll.call(this, new Credential(Credential.ContactlessCard, cardData));\r\n    };\r\n    /** Deletes the card enrollment.\r\n     * @returns a promise to delete the enrollment or reject in case of an error.\r\n     */\r\n    ContactlessCardEnroll.prototype.unenroll = function () {\r\n        return _super.prototype._unenroll.call(this, new Credential(Credential.ContactlessCard));\r\n    };\r\n    return ContactlessCardEnroll;\r\n}(Enroller));\r\nexport { ContactlessCardEnroll };\r\n/**\r\n * Proximity card enrollment API.\r\n */\r\nvar ProximityCardEnroll = /** @class */ (function (_super) {\r\n    __extends(ProximityCardEnroll, _super);\r\n    /** Constructs a new proximity card enrollment API object.\r\n     * @param context - an {@link EnrollmentContext|enrollment context}.\r\n     */\r\n    function ProximityCardEnroll(context) {\r\n        return _super.call(this, context) || this;\r\n    }\r\n    /** Reads a card enrollment availability.\r\n     * @returns a fulfilled promise when a card can be enrolled, a rejected promise otherwise.\r\n     */\r\n    ProximityCardEnroll.prototype.canEnroll = function () {\r\n        return _super.prototype._canEnroll.call(this, Credential.ProximityCard);\r\n    };\r\n    /** Enrolls a card.\r\n     * @param cardData - a card enrollment data obtained using {@link CardsReader.getCardEnrollData}.\r\n     * @returns a promise to perform the enrollment or reject in case of an error.\r\n     */\r\n    ProximityCardEnroll.prototype.enroll = function (cardData) {\r\n        return _super.prototype._enroll.call(this, new Credential(Credential.ProximityCard, cardData));\r\n    };\r\n    /** Deletes the card enrollment.\r\n     * @returns a promise to delete the enrollment or reject in case of an error.\r\n     */\r\n    ProximityCardEnroll.prototype.unenroll = function () {\r\n        return _super.prototype._unenroll.call(this, new Credential(Credential.ProximityCard));\r\n    };\r\n    return ProximityCardEnroll;\r\n}(Enroller));\r\nexport { ProximityCardEnroll };\r\n//# sourceMappingURL=enroll.js.map","import { __extends } from \"tslib\";\r\nimport { Credential } from '@digitalpersona/core';\r\nimport { Enroller } from '../../private';\r\n/**\r\n * Face enrollment API.\r\n */\r\nvar FaceEnroll = /** @class */ (function (_super) {\r\n    __extends(FaceEnroll, _super);\r\n    /** Constructs a new face enrollment API object.\r\n     * @param context - an {@link EnrollmentContext|enrollment context}.\r\n     */\r\n    function FaceEnroll(context) {\r\n        return _super.call(this, context) || this;\r\n    }\r\n    /** Reads a face enrollment availability.\r\n     * @returns a fulfilled promise when a face can be enrolled, a rejected promise otherwise.\r\n     */\r\n    FaceEnroll.prototype.canEnroll = function () {\r\n        return _super.prototype._canEnroll.call(this, Credential.Face);\r\n    };\r\n    /** Enrolls a face.\r\n     * @param samples - a collection of face images.\r\n     * @returns a promise to perform the enrollment or reject in case of an error.\r\n     */\r\n    FaceEnroll.prototype.enroll = function (samples) {\r\n        return _super.prototype._enroll.call(this, new Credential(Credential.Face, samples));\r\n    };\r\n    /** Deletes the face enrollment.\r\n     * @returns a promise to delete the enrollment or reject in case of an error.\r\n     */\r\n    FaceEnroll.prototype.unenroll = function () {\r\n        return _super.prototype._unenroll.call(this, new Credential(Credential.Face));\r\n    };\r\n    return FaceEnroll;\r\n}(Enroller));\r\nexport { FaceEnroll };\r\n//# sourceMappingURL=enroll.js.map","import { __extends } from \"tslib\";\r\nimport { Credential, Utf8, Finger } from '@digitalpersona/core';\r\nimport { Enroller } from '../../private';\r\n/**\r\n * Fingerprint enrollment API.\r\n */\r\nvar FingerprintsEnroll = /** @class */ (function (_super) {\r\n    __extends(FingerprintsEnroll, _super);\r\n    /** Constructs a new fingerprint enrollment API object.\r\n     * @param context - an {@link EnrollmentContext|enrollment context}.\r\n     */\r\n    function FingerprintsEnroll(context) {\r\n        return _super.call(this, context) || this;\r\n    }\r\n    /** Reads a fingerprint enrollment status.\r\n     * @returns a promise to return fingerprint enrollment data. The data is a collection of enrolled fingers.\r\n     */\r\n    FingerprintsEnroll.prototype.getEnrolledFingers = function () {\r\n        return this.context.enrollService\r\n            .GetEnrollmentData(this.context.getUser(), Credential.Fingerprints)\r\n            .then(function (data) {\r\n            return JSON.parse(Utf8.fromBase64Url(data))\r\n                .map(function (item) { return Finger.fromJson(item); });\r\n        });\r\n    };\r\n    /** Reads a fingerprint enrollment availability.\r\n     * @returns a fulfilled promise when fingerprints can be enrolled, a rejected promise otherwise.\r\n     */\r\n    FingerprintsEnroll.prototype.canEnroll = function () {\r\n        return _super.prototype._canEnroll.call(this, Credential.Fingerprints);\r\n    };\r\n    /** Enrolls a fingerprint.\r\n     * @param position - a position of a finger to enroll\r\n     * @param samples - a collection of fingerprint scans.\r\n     * @returns a promise to perform the enrollment or reject in case of an error.\r\n     */\r\n    FingerprintsEnroll.prototype.enroll = function (position, samples) {\r\n        var data = {\r\n            position: (position instanceof Finger) ? position.position : position,\r\n            samples: samples,\r\n        };\r\n        return _super.prototype._enroll.call(this, new Credential(Credential.Fingerprints, data));\r\n    };\r\n    /** Deletes the fingerprint enrollment.\r\n     * @param position - a position(s) of a finger(s) to delete.\r\n     *                   If not defined, all enrolled fingerprintss will be deleted.\r\n     * @returns a promise to delete the enrollment or reject in case of an error.\r\n     */\r\n    FingerprintsEnroll.prototype.unenroll = function (position) {\r\n        var data = typeof (position) === \"number\" ? [{ position: position }] :\r\n            (position instanceof Finger) ? [position] :\r\n                (position instanceof Array) ? position.map(function (p) { return (p instanceof Finger) ? p.position : p; })\r\n                    : null;\r\n        return _super.prototype._unenroll.call(this, new Credential(Credential.Fingerprints, data));\r\n    };\r\n    return FingerprintsEnroll;\r\n}(Enroller));\r\nexport { FingerprintsEnroll };\r\n//# sourceMappingURL=enroll.js.map","/** @internal */\r\nexport var CustomAction;\r\n(function (CustomAction) {\r\n    CustomAction[CustomAction[\"PasswordRandomization\"] = 4] = \"PasswordRandomization\";\r\n    CustomAction[CustomAction[\"PasswordReset\"] = 13] = \"PasswordReset\";\r\n})(CustomAction || (CustomAction = {}));\r\n//# sourceMappingURL=actions.js.map","import { __extends } from \"tslib\";\r\nimport { User, Credential, JWT, Url, Base32, Ticket, Base64Url } from \"@digitalpersona/core\";\r\nimport { Enroller } from \"../../private\";\r\nimport { CustomAction } from \"./actions\";\r\n/**\r\n * One-time password enrollment API.\r\n */\r\nvar TimeOtpEnroll = /** @class */ (function (_super) {\r\n    __extends(TimeOtpEnroll, _super);\r\n    /** Constructs a new One-Time Password enrollment API object.\r\n     * @param context - an {@link EnrollmentContext|enrollment context}.\r\n     */\r\n    function TimeOtpEnroll(context) {\r\n        return _super.call(this, context) || this;\r\n    }\r\n    /**\r\n     * Converts a secret key to a Key URI, which will be encode as a QR Code image to scan.\r\n     * @param key - a secret key to convert to a Key URI string.\r\n     * @returns - a promise to return a Key URI string\r\n     * @remarks\r\n     * For Push Notifications fo AD users, make sure the user's token has an `ad_guid` claim.\r\n     * You may need to use `ClaimsService.GetClaims()` method to append this claim to an existing token.\r\n     */\r\n    TimeOtpEnroll.prototype.createKeyUri = function (key) {\r\n        var type = \"totp\";\r\n        var jwt = this.context.getJWT();\r\n        var claims = JWT.claims(jwt);\r\n        if (!claims)\r\n            return Promise.reject(new Error('NoClaims'));\r\n        var issuer = claims.dom || claims.iss; // will be used as a prefix of a label\r\n        if (!issuer)\r\n            return Promise.reject(new Error('NoIssuer'));\r\n        var uid = claims.uid || claims[\"ad_guid\"]; // required for Push OTP. Also needs TenantID.\r\n        var username = this.context.getUser().name;\r\n        var secret = Base32.fromBytes(key);\r\n        return this.context.enrollService\r\n            .GetEnrollmentData(User.Anonymous(), Credential.OneTimePassword)\r\n            .then(function (data) {\r\n            var otpData = JSON.parse(data);\r\n            if (!otpData)\r\n                return Promise.reject(new Error(\"NoEnrollmentData\"));\r\n            var pushSupported = uid && otpData.pn_tenant_id;\r\n            var uri = new Url(\"otpauth://\" + type, issuer + \":\" + username, {\r\n                secret: secret,\r\n                issuer: issuer,\r\n                apikey: otpData.pn_api_key,\r\n                tenantid: pushSupported ? otpData.pn_tenant_id : undefined,\r\n                useruuid: pushSupported ? uid : undefined,\r\n            });\r\n            return uri.href;\r\n        });\r\n    };\r\n    /**\r\n     * Sends an verification code using SMS to the user's device.\r\n     * @param key - a secret key to \"seed\" an OTP generator and start generating verification codes.\r\n     * @param phoneNumber - a phone number to send a current verification code to.\r\n     */\r\n    TimeOtpEnroll.prototype.sendVerificationCode = function (key, phoneNumber) {\r\n        return this.context.enrollService\r\n            .CustomAction(Ticket.None(), this.context.getUser(), new Credential(Credential.OneTimePassword, {\r\n            key: Base64Url.fromBytes(key),\r\n            phoneNumber: phoneNumber,\r\n        }), CustomAction.SendSMSRequest)\r\n            .then();\r\n    };\r\n    /**\r\n     * Enrolls One-Time Password using a software TOTP (e.g. DigitalPersona app, Google Authenticator etc.)\r\n     * @param code - a verification code entered by a user.\r\n     * @param key - a secret key used to \"seed\" an OTP generator.\r\n     * @param phoneNumber - a phone number the verification code was sent to\r\n     * @returns a promise to perform the enrollment or reject in case of an error.\r\n     */\r\n    TimeOtpEnroll.prototype.enrollSoftwareOtp = function (code, key, phoneNumber) {\r\n        return _super.prototype._enroll.call(this, new Credential(Credential.OneTimePassword, {\r\n            otp: code,\r\n            key: Base64Url.fromBytes(key),\r\n            phoneNumber: phoneNumber,\r\n        }));\r\n    };\r\n    /**\r\n     * Enrolls a hardware TOTP token.\r\n     * @param code - a verification code entered by a user.\r\n     * @param serialNumber - a serial number of the TOTP token.\r\n     * @param counter - an optional counter displayed on some token models.\r\n     * @param timer - an optional timer displayed on some token models\r\n     * @returns a promise to perform the enrollment or reject in case of an error.\r\n     */\r\n    TimeOtpEnroll.prototype.enrollHardwareOtp = function (code, serialNumber, counter, timer) {\r\n        return _super.prototype._enroll.call(this, new Credential(Credential.OneTimePassword, {\r\n            otp: code,\r\n            serialNumber: serialNumber,\r\n            counter: counter,\r\n            timer: timer,\r\n        }));\r\n    };\r\n    /** Deletes the OTP enrollment.\r\n     * @returns a promise to delete the enrollment or reject in case of an error.\r\n     */\r\n    TimeOtpEnroll.prototype.unenroll = function () {\r\n        return _super.prototype._unenroll.call(this, new Credential(Credential.OneTimePassword));\r\n    };\r\n    return TimeOtpEnroll;\r\n}(Enroller));\r\nexport { TimeOtpEnroll };\r\n//# sourceMappingURL=enroll.js.map","import { __extends } from \"tslib\";\r\nimport { Credential, Ticket } from '@digitalpersona/core';\r\nimport { CustomAction } from './actions';\r\nimport { Enroller } from '../../private';\r\n/**\r\n * Password enrollment API.\r\n * @remarks\r\n * As a primary credential, user's password cannot be unenroled, it can only be changed, reset or randomized.\r\n */\r\nvar PasswordEnroll = /** @class */ (function (_super) {\r\n    __extends(PasswordEnroll, _super);\r\n    /** Constructs a new password enrollment API object.\r\n     * @param context - an {@link EnrollmentContext|enrollment context}.\r\n     */\r\n    function PasswordEnroll(context) {\r\n        return _super.call(this, context) || this;\r\n    }\r\n    /** Reads a password change availability.\r\n     * @returns a fulfilled promise when a password can be changed, a rejected promise otherwise.\r\n     */\r\n    PasswordEnroll.prototype.canEnroll = function () {\r\n        return _super.prototype._canEnroll.call(this, Credential.Password);\r\n    };\r\n    /**\r\n     * Changes a password.\r\n     * @param newPassword - a new password.\r\n     * @param oldPassword - a password to replace. Must match the existing password.\r\n     * @returns a promise to perform the password change or reject in case of an error.\r\n     */\r\n    PasswordEnroll.prototype.enroll = function (newPassword, oldPassword) {\r\n        return _super.prototype._enroll.call(this, new Credential(Credential.Password, { oldPassword: oldPassword, newPassword: newPassword }));\r\n    };\r\n    /**\r\n     * Resets a password.\r\n     * @param newPassword - a new password which will replace any existing password.\r\n     * @returns a promise to perform the password reset or reject in case of an error.\r\n     * @remarks\r\n     * DigitalPersona AD Server supports password randomization only for ActiveDirectory users.\r\n     * DigitalPersona LDS Server supports password randomization only for DigitalPersona users (formerly \"Altus Users\").\r\n     */\r\n    PasswordEnroll.prototype.reset = function (newPassword) {\r\n        return _super.prototype._enroll.call(this, new Credential(Credential.Password, newPassword));\r\n    };\r\n    /**\r\n     * Creates a new strong password with good complexity properties.\r\n     * @returns a promise to return a randomized password.\r\n     * @remarks\r\n     * DigitalPersona AD Server supports password randomization only for ActiveDirectory users.\r\n     * DigitalPersona LDS Server supports password randomization only for DigitalPersona users (formerly \"Altus Users\").\r\n     */\r\n    PasswordEnroll.prototype.randomize = function () {\r\n        return this.context.enrollService.CustomAction(new Ticket(this.context.securityOfficer || \"\"), this.context.getUser(), new Credential(Credential.Password), CustomAction.PasswordRandomization);\r\n    };\r\n    return PasswordEnroll;\r\n}(Enroller));\r\nexport { PasswordEnroll };\r\n//# sourceMappingURL=enroll.js.map","import { __extends } from \"tslib\";\r\nimport { Credential } from '@digitalpersona/core';\r\nimport { Enroller } from '../../private';\r\n/**\r\n * Personal Identification Number (PIN) enrollment API.\r\n */\r\nvar PinEnroll = /** @class */ (function (_super) {\r\n    __extends(PinEnroll, _super);\r\n    /** Constructs a new PIN enrollment API object.\r\n     * @param context - an {@link EnrollmentContext|enrollment context}.\r\n     */\r\n    function PinEnroll(context) {\r\n        return _super.call(this, context) || this;\r\n    }\r\n    /** Reads a PIN enrollment availability.\r\n     * @returns a fulfilled promise when a PIN can be enrolled, a rejected promise otherwise.\r\n     */\r\n    PinEnroll.prototype.canEnroll = function () {\r\n        return _super.prototype._canEnroll.call(this, Credential.PIN);\r\n    };\r\n    /** Enrolls a PIN.\r\n     * @param pin - a Personal Identification Number (PIN).\r\n     * @returns a promise to perform the enrollment or reject in case of an error.\r\n     */\r\n    PinEnroll.prototype.enroll = function (pin) {\r\n        return _super.prototype._enroll.call(this, new Credential(Credential.PIN, pin));\r\n    };\r\n    /** Deletes the PIN enrollment.\r\n     * @returns a promise to delete the enrollment or reject in case of an error.\r\n     */\r\n    PinEnroll.prototype.unenroll = function () {\r\n        return _super.prototype._unenroll.call(this, new Credential(Credential.PIN));\r\n    };\r\n    return PinEnroll;\r\n}(Enroller));\r\nexport { PinEnroll };\r\n//# sourceMappingURL=enroll.js.map","import { __extends } from \"tslib\";\r\nimport { Credential, Question, Utf8 } from '@digitalpersona/core';\r\nimport { Enroller } from '../../private';\r\n/**\r\n * Security Questions enrollment API.\r\n */\r\nvar SecurityQuestionsEnroll = /** @class */ (function (_super) {\r\n    __extends(SecurityQuestionsEnroll, _super);\r\n    /** Constructs a new Security Questions enrollment API object.\r\n     * @param context - an {@link EnrollmentContext|enrollment context}.\r\n     */\r\n    function SecurityQuestionsEnroll(context) {\r\n        return _super.call(this, context) || this;\r\n    }\r\n    /**\r\n     * Reads enrolled Security Questions.\r\n     * @returns a promise to return a collection of enrolled Security Questions.\r\n     */\r\n    SecurityQuestionsEnroll.prototype.getEnrolledQuestions = function () {\r\n        return this.context.enrollService\r\n            .GetEnrollmentData(this.context.getUser(), Credential.SecurityQuestions)\r\n            .then(function (data) {\r\n            return JSON.parse(Utf8.fromBase64Url(data))\r\n                .map(function (item) { return Question.fromJson(item); });\r\n        });\r\n    };\r\n    /** Reads a Security Questions enrollment availability.\r\n     * @returns a fulfilled promise when Security Questions can be enrolled, a rejected promise otherwise.\r\n     */\r\n    SecurityQuestionsEnroll.prototype.canEnroll = function () {\r\n        return _super.prototype._canEnroll.call(this, Credential.SecurityQuestions);\r\n    };\r\n    /**\r\n     * Enrolls Security Questions.\r\n     * @param questionsWithAnswers - a colelction of user's answers to Security Questions.\r\n     * @returns a promise to perform the enrollment or reject in case of an error.\r\n     */\r\n    SecurityQuestionsEnroll.prototype.enroll = function (questionsWithAnswers) {\r\n        var equal = function (a, b) {\r\n            return a.question.number === b.question.number;\r\n        };\r\n        var unique = function (val, idx, arr) {\r\n            return arr.findIndex(function (qa) { return equal(qa, val); }) === idx;\r\n        };\r\n        var data = questionsWithAnswers\r\n            .filter(function (qa) { return qa.question.number === qa.answer.number; })\r\n            .filter(unique)\r\n            .sort(function (a, b) { return b.question.number - a.question.number; }); // server requires reverse order\r\n        return _super.prototype._enroll.call(this, new Credential(Credential.SecurityQuestions, data));\r\n    };\r\n    /** Deletes the Security Question enrollment.\r\n     * @returns a promise to delete the enrollment or reject in case of an error.\r\n     */\r\n    SecurityQuestionsEnroll.prototype.unenroll = function () {\r\n        return _super.prototype._unenroll.call(this, new Credential(Credential.SecurityQuestions));\r\n    };\r\n    return SecurityQuestionsEnroll;\r\n}(Enroller));\r\nexport { SecurityQuestionsEnroll };\r\n//# sourceMappingURL=enroll.js.map","import { __assign, __extends } from \"tslib\";\r\nimport * as u2fApi from 'u2f-api';\r\nimport { Credential, Base64Url } from '@digitalpersona/core';\r\nimport { Enroller } from '../../private';\r\n/**\r\n * Universal Second Factor (U2F) enrollment API.\r\n */\r\nvar U2FEnroll = /** @class */ (function (_super) {\r\n    __extends(U2FEnroll, _super);\r\n    /** Constructs a new U2F enrollment API object.\r\n     * @param context - an {@link EnrollmentContext|enrollment context}.\r\n     * @param appId - an AppID of the service.\r\n     */\r\n    function U2FEnroll(context, appId) {\r\n        var _this = _super.call(this, context) || this;\r\n        if (!appId)\r\n            throw new Error(\"appId\");\r\n        _this.appId = appId;\r\n        return _this;\r\n    }\r\n    /** Reads a U2F enrollment availability.\r\n     * @returns a fulfilled promise when a U2F can be enrolled, a rejected promise otherwise.\r\n     */\r\n    U2FEnroll.prototype.canEnroll = function () {\r\n        return _super.prototype._canEnroll.call(this, Credential.U2F);\r\n    };\r\n    /**\r\n     * Enrolls a U2F token.\r\n     * @returns a promise to perform the enrollment or reject in case of an error.\r\n     */\r\n    U2FEnroll.prototype.enroll = function () {\r\n        var _this = this;\r\n        var version = \"U2F_V2\";\r\n        var appId = this.appId;\r\n        var timestamp = Math.round(new Date().getTime() / (U2FEnroll.TIME_WINDOW * 1000));\r\n        var challenge = Base64Url.fromUtf16(timestamp.toString());\r\n        var registerRequests = [{ version: version, appId: appId, challenge: challenge }];\r\n        return u2fApi\r\n            .register(registerRequests, [], U2FEnroll.TIMEOUT)\r\n            .then(function (response) {\r\n            return _super.prototype._enroll.call(_this, new Credential(Credential.U2F, __assign({ version: version, appId: appId }, response)));\r\n        });\r\n    };\r\n    /** Deletes the U2F enrollment.\r\n     * @returns a promise to delete the enrollment or reject in case of an error.\r\n     */\r\n    U2FEnroll.prototype.unenroll = function () {\r\n        return _super.prototype._unenroll.call(this, new Credential(Credential.U2F));\r\n    };\r\n    U2FEnroll.TIMEOUT = 20;\r\n    U2FEnroll.TIME_WINDOW = 30;\r\n    return U2FEnroll;\r\n}(Enroller));\r\nexport { U2FEnroll };\r\n//# sourceMappingURL=enroll.js.map"],"names":["EnrollmentContext","enrollService","user","securityOfficer","this","Error","User","prototype","isAuthenticated","getJWT","getUser","fromJWT","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","create","CustomAction","__assign","assign","t","s","i","n","arguments","length","call","apply","Enroller","context","_canEnroll","credId","IsEnrollmentAllowed","Ticket","_enroll","credential","EnrollAltusUserCredentials","EnrollUserCredentials","_unenroll","DeleteAltusUserCredentials","DeleteUserCredentials","SmartCardEnroll","_super","getEnrolledCards","GetEnrollmentData","Credential","SmartCard","then","data","JSON","parse","Utf8","fromBase64Url","canEnroll","enroll","cardData","unenroll","keyHash","ContactlessCardEnroll","ContactlessCard","ProximityCardEnroll","ProximityCard","FaceEnroll","Face","samples","FingerprintsEnroll","getEnrolledFingers","Fingerprints","map","item","Finger","fromJson","position","TimeOtpEnroll","createKeyUri","key","jwt","claims","JWT","Promise","reject","issuer","dom","iss","uid","username","name","secret","Base32","fromBytes","Anonymous","OneTimePassword","otpData","pushSupported","pn_tenant_id","Url","apikey","pn_api_key","tenantid","undefined","useruuid","href","sendVerificationCode","phoneNumber","None","Base64Url","SendSMSRequest","enrollSoftwareOtp","code","otp","enrollHardwareOtp","serialNumber","counter","timer","PasswordEnroll","Password","newPassword","oldPassword","reset","randomize","PasswordRandomization","PinEnroll","PIN","pin","SecurityQuestionsEnroll","getEnrolledQuestions","SecurityQuestions","Question","questionsWithAnswers","filter","qa","question","number","answer","val","idx","arr","findIndex","sort","a","U2FEnroll","appId","_this","U2F","timestamp","Math","round","Date","getTime","TIME_WINDOW","challenge","fromUtf16","toString","registerRequests","version","u2fApi\r\n            .register","TIMEOUT","response"],"mappings":"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"}